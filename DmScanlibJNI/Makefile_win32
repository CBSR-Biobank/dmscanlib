#READ THIS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# please note that for the library to be correctly loaded on linux, 
#the "lib" prefix is required on the library file.
# in this case we are loading with System.loadLibrary("StrArray"). 
# this means we need to have the file "libStrArray.so" in the java.library.path

JAVA_HOME := "C:/Program Files/Java/jdk1.6.0_26"

JNI_INCLUDE_PATH := $(JAVA_HOME)/include

JAVA_FILE_MAIN := DmScanlib_JNI_Test
LIB_FILE_NAME := DmScanlib
JAVA_FILE_NAME := $(LIB_FILE_NAME)


SCANLIB_OBJECTS =  DecodeProfile.class DecodeSettings.class ScanCoordinates.class ScanSettings.class ScanlibData.class
JAVA_OBJECTS = $(SCANLIB_OBJECTS) $(LIB_FILE_NAME).class $(JAVA_FILE_MAIN).class 
OBJECTS :=   $(JAVA_OBJECTS) $(LIB_FILE_NAME).h $(LIB_FILE_NAME).dll

.PHONY : all
all: ${OBJECTS}

.PHONY : clean
clean:
	-rm -if ${OBJECTS}

.PHONY : run	
run:	
	-$(JAVA_HOME)/bin/java ${JAVA_FILE_MAIN}

%.class : %.java
	$(JAVA_HOME)/bin/javac $^

$(LIB_FILE_NAME).h :  $(JAVA_FILE_NAME).class
	$(JAVA_HOME)/bin/javah -jni $(JAVA_FILE_NAME)
	-mv  $(JAVA_FILE_NAME).h $@

$(LIB_FILE_NAME).dll : $(LIB_FILE_NAME).cpp
	g++ -I$(JNI_INCLUDE_PATH) -I$(JNI_INCLUDE_PATH)/win32 -Wl,--add-stdcall-alias -shared -o $@ $^
